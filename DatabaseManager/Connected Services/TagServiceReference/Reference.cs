//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DatabaseManager.TagServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TagServiceReference.ITagService", CallbackContract=typeof(DatabaseManager.TagServiceReference.ITagServiceCallback))]
    public interface ITagService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITagService/SetOutput", ReplyAction="http://tempuri.org/ITagService/SetOutputResponse")]
        void SetOutput(string tagName, double value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITagService/SetOutput", ReplyAction="http://tempuri.org/ITagService/SetOutputResponse")]
        System.Threading.Tasks.Task SetOutputAsync(string tagName, double value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITagService/GetOutput", ReplyAction="http://tempuri.org/ITagService/GetOutputResponse")]
        void GetOutput(string tagName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITagService/GetOutput", ReplyAction="http://tempuri.org/ITagService/GetOutputResponse")]
        System.Threading.Tasks.Task GetOutputAsync(string tagName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITagService/GetAllOutputs", ReplyAction="http://tempuri.org/ITagService/GetAllOutputsResponse")]
        void GetAllOutputs();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITagService/GetAllOutputs", ReplyAction="http://tempuri.org/ITagService/GetAllOutputsResponse")]
        System.Threading.Tasks.Task GetAllOutputsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITagService/ToggleScan", ReplyAction="http://tempuri.org/ITagService/ToggleScanResponse")]
        void ToggleScan(string tagName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITagService/ToggleScan", ReplyAction="http://tempuri.org/ITagService/ToggleScanResponse")]
        System.Threading.Tasks.Task ToggleScanAsync(string tagName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITagService/AddTag", ReplyAction="http://tempuri.org/ITagService/AddTagResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CommonLibrary.Model.OutputTag))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CommonLibrary.Model.AnalogOutput))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CommonLibrary.Model.DigitalOutput))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CommonLibrary.Model.InputTag))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CommonLibrary.Model.AnalogInput))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(CommonLibrary.Model.DigitalInput))]
        void AddTag(CommonLibrary.Model.Tag tag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITagService/AddTag", ReplyAction="http://tempuri.org/ITagService/AddTagResponse")]
        System.Threading.Tasks.Task AddTagAsync(CommonLibrary.Model.Tag tag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITagService/RemoveTag", ReplyAction="http://tempuri.org/ITagService/RemoveTagResponse")]
        void RemoveTag(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITagService/RemoveTag", ReplyAction="http://tempuri.org/ITagService/RemoveTagResponse")]
        System.Threading.Tasks.Task RemoveTagAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITagService/ListTags", ReplyAction="http://tempuri.org/ITagService/ListTagsResponse")]
        string[] ListTags(CommonLibrary.Model.Enum.TagType type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITagService/ListTags", ReplyAction="http://tempuri.org/ITagService/ListTagsResponse")]
        System.Threading.Tasks.Task<string[]> ListTagsAsync(CommonLibrary.Model.Enum.TagType type);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITagServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ITagService/MessageArrived")]
        void MessageArrived(string message);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITagServiceChannel : DatabaseManager.TagServiceReference.ITagService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TagServiceClient : System.ServiceModel.DuplexClientBase<DatabaseManager.TagServiceReference.ITagService>, DatabaseManager.TagServiceReference.ITagService {
        
        public TagServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public TagServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public TagServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public TagServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public TagServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void SetOutput(string tagName, double value) {
            base.Channel.SetOutput(tagName, value);
        }
        
        public System.Threading.Tasks.Task SetOutputAsync(string tagName, double value) {
            return base.Channel.SetOutputAsync(tagName, value);
        }
        
        public void GetOutput(string tagName) {
            base.Channel.GetOutput(tagName);
        }
        
        public System.Threading.Tasks.Task GetOutputAsync(string tagName) {
            return base.Channel.GetOutputAsync(tagName);
        }
        
        public void GetAllOutputs() {
            base.Channel.GetAllOutputs();
        }
        
        public System.Threading.Tasks.Task GetAllOutputsAsync() {
            return base.Channel.GetAllOutputsAsync();
        }
        
        public void ToggleScan(string tagName) {
            base.Channel.ToggleScan(tagName);
        }
        
        public System.Threading.Tasks.Task ToggleScanAsync(string tagName) {
            return base.Channel.ToggleScanAsync(tagName);
        }
        
        public void AddTag(CommonLibrary.Model.Tag tag) {
            base.Channel.AddTag(tag);
        }
        
        public System.Threading.Tasks.Task AddTagAsync(CommonLibrary.Model.Tag tag) {
            return base.Channel.AddTagAsync(tag);
        }
        
        public void RemoveTag(string name) {
            base.Channel.RemoveTag(name);
        }
        
        public System.Threading.Tasks.Task RemoveTagAsync(string name) {
            return base.Channel.RemoveTagAsync(name);
        }
        
        public string[] ListTags(CommonLibrary.Model.Enum.TagType type) {
            return base.Channel.ListTags(type);
        }
        
        public System.Threading.Tasks.Task<string[]> ListTagsAsync(CommonLibrary.Model.Enum.TagType type) {
            return base.Channel.ListTagsAsync(type);
        }
    }
}
